#!/usr/bin/python3
from http.server import BaseHTTPRequestHandler, HTTPServer
from cgi import parse_header, parse_multipart
from urllib import parse
from base64 import b64decode
from hashlib import md5

class S(BaseHTTPRequestHandler):
        
	def do_POST(self):
		ctype, pdict = parse_header(self.headers['content-type'])
#		print (ctype)
		content_length = int(self.headers['Content-Length'])
#		print (content_length)
		postvars = parse.parse_qs(self.rfile.read(content_length),keep_blank_values=1)
#		print (postvars)
		FileName = postvars['fileName'.encode('utf-8')][0].decode('utf-8')
#		print (FileName)
		FileContentB64 = postvars['fileContentB64'.encode('utf-8')][0].decode('utf-8')
#		print (FileContentB64)
		OriginalMD5 = postvars['fileCheckSum'.encode('utf-8')][0].decode('utf-8')
#		print (OriginalMD5)
		file = open("uploads/"+FileName, "w+")
		file.write(b64decode(FileContentB64).decode('utf-8'))
		file.close()
		SavedFileMD5 = md5(file_as_bytes(open("uploads/"+FileName, 'rb'))).hexdigest()
#		print (SavedFileMD5)
		if(SavedFileMD5.lower() == OriginalMD5.lower()):
			print ("Saved file: "+ FileName)
		else:
			print ("Checksum mismatch: "+OriginalMD5 +" vs "+SavedFileMd5)
        
def file_as_bytes(file):
	with file:
		return file.read()

def run(server_class=HTTPServer, handler_class=S, port=80):
	server_address = ('', port)
	httpd = server_class(server_address, handler_class)
	print ('Starting httpd...')
	httpd.serve_forever()

if __name__ == "__main__":
	from sys import argv

	if len(argv) == 2:
		run(port=int(argv[1]))
	else:
		run()

